@model KarpicentroWeb.Models.ProductViewModel

@{
    if (ViewBag.Nivel == "Admin")
    {
        Layout = "_LayoutAdmin";
    }
    else if (ViewBag.Nivel == "Cliente")
    {
        Layout = "_LayoutUsers";
    }

    var materialsinrepetir = new HashSet<int>();
}

<head>
    <meta charset="UTF-8">
    <meta http-equiv="X-UA-Compatible" content="IE=edge">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.3/dist/css/bootstrap.min.css" rel="stylesheet" integrity="sha384-QWTKZyjpPEjISv5WaRU9OFeRpok6YctnYmDr5pNlyT2bRjXh0JMhjY6hW+ALEwIH" crossorigin="anonymous">
    <link rel="stylesheet" href="~/css/Detalles.css">
    <link rel="preconnect" href="https://fonts.gstatic.com" crossorigin>
    <link href="https://fonts.googleapis.com/css2?family=Big+Shoulders+Display:wght@501&family=Big+Shoulders+Text:wght@383&family=Lobster&display=swap" rel="stylesheet">
    <link rel="stylesheet" href="https://fonts.googleapis.com/css2?family=Material+Symbols+Outlined:opsz,wght,FILL,GRAD@20..48,100..700,0..1,-50..200" />
    <link rel="preconnect" href="https://fonts.googleapis.com">
    <link rel="preconnect" href="https://fonts.gstatic.com" crossorigin>
    <link href="https://fonts.googleapis.com/css2?family=Lobster&family=Overlock+SC&family=Roboto+Condensed:ital,wght@0,100..900;1,100..900&family=Ropa+Sans:ital@0;1&display=swap" rel="stylesheet">

    <title>Detalles</title>

    <script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>
    <script type="text/javascript">
        $(document).ready(function () {
            let maxQuantity = 1;
            let productInterId = null;
            let imageUrl = '';
            let price = 0;

            $('#combobox1').on("change", function () {
                var valor = $(this).val();
                var idprod = '@ViewBag.idproducto';
                $.ajax({
                    type: 'GET',
                    url: '/api/Values/DetalleCombos',
                    data: { valor: valor, idprod: idprod },
                    success: function (response) {
                        var data = response.items;
                        imageUrl = response.imageUrl;
                        var combobox2 = $('#combobox2');
                        combobox2.empty();
                        combobox2.append($('<option>', {
                            value: "",
                            text: "Colores..."
                        }));
                        $.each(data, function (index, item) {
                            combobox2.append($('<option>', {
                                value: item.value,
                                text: item.text,
                                'data-max-quantity': item.maxQuantity,
                                'data-product-inter-id': item.productInterId,
                                'data-price': item.price  // Añadir el precio como data attribute
                            }));
                        });

                        if (imageUrl) {
                            $('#product-image').attr('src', imageUrl);
                            // Update hidden input with image URL
                            $('input[name="RutaImagen"]').val(imageUrl);
                        }
                    },
                    error: function (error) {
                        console.log(error);
                    }
                });
            });

            $('#combobox2').on("change", function () {
                var selectedOption = $(this).find('option:selected');
                maxQuantity = selectedOption.data('max-quantity') || 1;
                productInterId = selectedOption.data('product-inter-id') || null;
                price = selectedOption.data('price') || 0;
                var quantityInput = $('input[name="Cantidad"]');
                quantityInput.val(1);

                $('#stock').text('Stock: ' + maxQuantity);

                // Update hidden input with productInterId
                $('input[name="idProductInter"]').val(productInterId);
                // Update the price display
                $('input[name="Total"]').val(price);
                $('.product-price').text(price.toFixed(2));  // Actualizar la visualización del precio
                $('input[name="Price"]').val(price.toFixed(2));
            });

            $('.btn-minus').click(function () {
                var quantityInput = $(this).closest('.quantity').find('input[name="Cantidad"]');
                var currentValue = parseInt(quantityInput.val());
                if (currentValue > 1) {
                    quantityInput.val(currentValue - 1);
                }
            });

            $('.btn-plus').click(function () {
                var quantityInput = $(this).closest('.quantity').find('input[name="Cantidad"]');
                var currentValue = parseInt(quantityInput.val());
                if (currentValue < maxQuantity) {
                    quantityInput.val(currentValue + 1);
                }
            });

            // Initialize stock display for categories without storage
            if (!$('#combobox2').length) {
                $('#stock').text('Stock: ' + maxQuantity);
            }
        });



    </script>
</head>

<style>
    * {
        box-sizing: border-box;
    }

    html {
        scroll-behavior: smooth;
    }

    .autenticado {
        text-align: center;
        padding: 20px;
        background-color: #f8d7da;
        color: #721c24;
        border: 1px solid #f5c6cb;
        border-radius: 5px;
        margin-bottom: 20px;
    }
</style>

<body>
    <form method="post">
        <section class="py-5">
            <div class="container">
                <div class="row gx-5">
                    <aside class="col-lg-6">
                        <div class="border rounded-4 mb-3 d-flex justify-content-center">
                            @{
                                foreach (var i in Model.Inter)
                                {
                                    if (ViewBag.IDproducto == i.idProducts)
                                    {
                                        <a class="rounded-4" target="_blank" data-type="image" href="https://http2.mlstatic.com/D_NQ_NP_611357-MLU71495380687_092023-O.webp">
                                            <img id="product-image" style="max-width: 600px; max-height: 600px; margin: auto;" class="rounded-4 fit" src="@i.Image" />
                                        </a>
                                        break;
                                    }
                                }
                            }
                        </div>
                    </aside>
                    <article class="col-lg-6">
                        <h6 class="text-uppercase">Detalles</h6>
                        @{
                            foreach (var i in Model.Products)
                            {
                                if (ViewBag.IDproducto == i.ID)
                                {
                                    <h1 class="h2">@i.Name</h1>
                                    break;
                                }
                            }
                        }
                        @{
                            foreach (var i in Model.Inter)
                            {
                                if (ViewBag.IDproducto == i.idProducts)
                                {
                                    <div class="d-flex mb-4">
                                        <p class="h5 me-4 mb-0 product-price">$@i.SalePrice</p>
                                        <p class="h5 me-4 mb-0" id="stock">Cantidad: @i.Stock</p>
                                    </div>
                                    break;
                                }
                            }
                        }
                        @{
                            foreach (var i in Model.Products)
                                if (ViewBag.IDproducto == i.ID)
                                {
                                    <p class="text-muted">
                                        @i.Description
                                    </p>
                                    break;
                                }
                        }
                        <hr />
                        <div class="d-flex mb-3">
                            <div class="me-3">
                                <p class="mb-0"><strong>Dimensiones :</strong></p>
                                <ul class="list-unstyled">
                                    @{
                                        foreach (var i in Model.Products)
                                            if (ViewBag.IDproducto == i.ID)
                                            {
                                                <li><i class="fas text-primary me-1"></i> Alto - @i.Height cm</li>
                                                <li><i class="fas text-primary me-1"></i> Ancho - @i.Width cm</li>
                                                <li><i class="fas text-primary me-1"></i> Profundo - @i.Depth cm</li>
                                                break;
                                            }
                                    }
                                </ul>
                            </div>
                            <div class="me-5">
                                <label class="form-label" for="select-color">Materiales:</label>
                                <select class="form-select" id="combobox1" onchange="cambiarImagenes()" name="Materiales">
                                    <option value="">Materiales...</option>
                                    @foreach (var f in Model.Inter)
                                    {
                                        if (f.idProducts == ViewBag.IDproducto)
                                        {
                                            foreach (var m in Model.Material)
                                            {
                                                if (f.idMaterials == m.ID && materialsinrepetir.Add(m.ID))
                                                {
                                                    <option value="@m.ID">@m.Name</option>
                                                }
                                            }
                                        }
                                    }
                                </select>
                            </div>
                            <div class="me-5">
                                <label class="form-label" for="select-color">Colores:</label>
                                <select name="Almacenamiento" class="form-select" id="combobox2" required style="width: 100%; max-width: 400px;">
                                    <option value="">Colores...</option>
                                </select>
                            </div>
                            <div>
                                <label class="form-label" for="input-quantity">Cantidad:</label>
                                <input class="form-control" id="amountInput" name="Amount" type="number" value="1" max="@Model.Inter.FirstOrDefault()?.Stock">
                            </div>
                        </div>
                        <br />
                        @{
                            if (ViewBag.Cookie != null)
                            {
                                if (ViewBag.Existencia > 0)
                                {
                                    foreach (var i in Model.Inter)
                                    {
                                        if (ViewBag.IDproducto == i.idProducts)
                                        {
                                            <input name="Existencia" type="hidden" value="@i.Stock">
                                            <input name="Price" type="hidden" value="@Model.Inter.FirstOrDefault(i => i.idProducts == ViewBag.IDproducto)?.SalePrice" />
                                            break;
                                        }
                                    }
                                    <div class="d-flex justify-content-center mt-3">
                                        <input name="idprod" type="hidden" value="@ViewBag.IDproducto">
                                        <input name="idProductInter" type="hidden" value="@Model.Inter.FirstOrDefault(c => c.idProducts == ViewBag.IDproducto)?.ID">
                                        <!-- Reducir el margen superior -->
                                        <button class="btn btn-primary text-white" asp-controller="Productos" asp-action="ProductDetails">Confirmar</button>
                                    </div>
                                    <div class="d-flex justify-content-center mt-2">
                                        <p>@ViewBag.Mensaje</p>
                                    </div>
                                }

                            }
                            else
                            {
                                <div class="card-body">
                                    <div class="autenticado">
                                        <p>Por favor, <a asp-controller="Home" asp-action="Login">inicia sesión</a> o <a asp-controller="Home" asp-action="Register">regístrate</a> para poder agregar al carrito.</p>
                                    </div>
                                </div>
                            }
                        }
                    </article>
                </div>
            </div>
        </section>
    </form>

    <script src="../assets/dist/js/bootstrap.bundle.min.js"></script>

    <script>
        // Obtener el elemento de entrada
        var amountInput = document.getElementById('amountInput');

        // Escuchar el evento de cambio en el campo de entrada
        amountInput.addEventListener('change', function () {
            // Obtener el valor actual y el valor máximo permitido
            var currentValue = parseInt(amountInput.value);
            var maxValue = parseInt(amountInput.max);

            // Si el valor actual es mayor que el máximo permitido, establecer el valor máximo como el valor actual
            if (currentValue > maxValue) {
                amountInput.value = maxValue;
            }
        });
    </script>
</body>
